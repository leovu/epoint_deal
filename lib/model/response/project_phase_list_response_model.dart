import 'dart:ui';class ProjectListPhaseResponseModel {  List<ProjectPhaseModel>? data;  ProjectListPhaseResponseModel({this.data});  ProjectListPhaseResponseModel.fromJson(List<dynamic>? json) {    if (json != null) {      data = <ProjectPhaseModel>[];      json.forEach((v) {        data!.add(new ProjectPhaseModel.fromJson(v));      });    }  }  Map<String, dynamic> toJson() {    final Map<String, dynamic> data = new Map<String, dynamic>();    if (this.data != null) {      data['Data'] = this.data!.map((v) => v.toJson()).toList();    }    return data;  }}class ProjectPhaseModel{int? manageProjectPhaseId;  int? manageProjectId;  String? phaseName;  String? phaseStart;  String? phaseEnd;  int? pic;  String? phaseStatus;  String? createdAt;  int? createdBy;  String? staffName;  String? staffAvatar;  String? maxDateEndWork;  PhaseCondition? condition;  int? work;ProjectPhaseModel(      {this.manageProjectPhaseId,        this.manageProjectId,        this.phaseName,        this.phaseStart,        this.phaseEnd,        this.pic,        this.phaseStatus,        this.createdAt,        this.createdBy,        this.staffName,        this.staffAvatar,        this.maxDateEndWork,        this.condition,        this.work});ProjectPhaseModel.fromJson(Map<String, dynamic> json) {    manageProjectPhaseId = json['manage_project_phase_id'];    manageProjectId = json['manage_project_id'];    phaseName = json['phase_name'];    phaseStart = json['phase_start'];    phaseEnd = json['phase_end'];    pic = json['pic'];    phaseStatus = json['phase_status'];    createdAt = json['created_at'];    createdBy = json['created_by'];    staffName = json['staff_name'];    staffAvatar = json['staff_avatar'];    maxDateEndWork = json['max_date_end_work'];    condition = json['condition'] != null        ? new PhaseCondition.fromJson(json['condition'])        : null;    work = json['work'];  }  Map<String, dynamic> toJson() {    final Map<String, dynamic> data = new Map<String, dynamic>();    data['manage_project_phase_id'] = this.manageProjectPhaseId;    data['manage_project_id'] = this.manageProjectId;    data['phase_name'] = this.phaseName;    data['phase_start'] = this.phaseStart;    data['phase_end'] = this.phaseEnd;    data['pic'] = this.pic;    data['phase_status'] = this.phaseStatus;    data['created_at'] = this.createdAt;    data['created_by'] = this.createdBy;    data['staff_name'] = this.staffName;    data['staff_avatar'] = this.staffAvatar;    data['max_date_end_work'] = this.maxDateEndWork;    if (this.condition != null) {      data['condition'] = this.condition!.toJson();    }    data['work'] = this.work;    return data;  }}class PhaseCondition {  String? conditionColor;  String? conditionName;  PhaseCondition({this.conditionColor, this.conditionName});  PhaseCondition.fromJson(Map<String, dynamic> json) {    conditionColor = json['condition_color'];    conditionName = json['condition_name'];  }  Map<String, dynamic> toJson() {    final Map<String, dynamic> data = new Map<String, dynamic>();    data['condition_color'] = this.conditionColor;    data['condition_name'] = this.conditionName;    return data;  }}class PhaseStatus {  String? statusId;  String? statusName;  Color? statusColor;  bool isSelected;  PhaseStatus({this.statusId, this.statusName, this.statusColor, this.isSelected = false});}class PhaseFilter {  PhaseStatus? status;  String? phaseFromStart;  String? phaseFromEnd;  String? phaseToStart;  String? phaseToEnd;  PhaseFilter({this.status, this.phaseFromStart, this.phaseFromEnd, this.phaseToStart, this.phaseToEnd});}